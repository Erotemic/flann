#!/usr/bin/env python
"""
    python -c "import setup, ubelt; print(ubelt.repr2(setup.KWARGS))"
"""
from __future__ import absolute_import, division, print_function

### hack ###
import skbuild_template  # TODO: integrate into skbuild  # NOQA
import skbuild
from skbuild import utils as skbu

import logging
import os
import sys
from collections import OrderedDict
from os.path import join

logging.basicConfig()
skbuild.logger.setLevel(logging.DEBUG)

GIT_AUTHORS = skbu.parse_authors()


NAME = 'pyflann'
VERSION = '1.10.0'  # TODO: parse
AUTHORS = ['Marius Muja'] + GIT_AUTHORS
AUTHOR_EMAIL = 'mariusm@cs.ubc.ca'
URL = 'http://www.cs.ubc.ca/~mariusm/flann/'
LICENSE = 'BSD'
DESCRIPTION = 'FLANN - Fast Library for Approximate Nearest Neighbors'


KWARGS = OrderedDict(
    name=NAME,
    version=VERSION,
    author=', '.join(AUTHORS[0:1]),
    author_email=AUTHOR_EMAIL,
    description=DESCRIPTION,
    long_description=skb.parse_long_description('README.md'),
    long_description_content_type='text/markdown',
    url=URL,
    license=LICENSE,
    install_requires=skbu.parse_requirements('requirements/runtime.txt'),
    extras_require={
        'all': skbu.parse_requirements('requirements.txt'),
        'tests': skbu.parse_requirements('requirements/tests.txt'),
        'build': skbu.parse_requirements('requirements/build.txt'),
        'runtime': skbu.parse_requirements('requirements/runtime.txt'),
    },

    # --- PACKAGES ---
    # The combination of packages and package_dir is how scikit-build will
    # know that the cmake installed files belong in the pyflann module and
    # not the data directory.
    packages=[
        'pyflann',
        # These are generated modules that will be created via build
        'pyflann.lib',
        'pyflann.bin',
        'pyflann.include',
    ],
    # packages=['pyflann', 'pyflann.lib'],
    # -------------------


    # --- PACKAGE DIR ---
    package_dir={
        'pyflann': 'pyflann',
        # Specify where autogenerated modules live relative to the build dir
        'pyflann.lib': 'lib',
        'pyflann.bin': 'bin',
        'pyflann.include': 'include',
    },
    # -------------------

    # --- PACKAGE DATA ---
    include_package_data=True,
    package_data={
        'pyflann': (
            ['*{}'.format(skbu.get_lib_ext())] +
            (['Release\\*.dll'] if os.name == 'nt' else [])
        ),
        'pyflann.lib': [
            'libflann.so', 'flann.dll', 'libflann.dll', 'libflann.dylib'
        ],
    },
    # package_data={
    #     NAME: (
    #         ['*{}'.format(skbu.get_lib_ext())] +
    #         ['lib.*{}'.format(skbu.get_lib_ext())] +
    #         ['*{}*'.format(skbu.get_lib_ext())] +
    #         ['lib.*{}*'.format(skbu.get_lib_ext())] +
    #         (['Release\\*.dll'] if os.name == 'nt' else []) +
    #         (['lib/Release\\*.dll'] if os.name == 'nt' else [])
    #     ),
    # SKBUILD hacks around this
    # package_data={
    #     'pyflann': [
    #         '*{}'.format(skbu.get_lib_ext()),
    #         'lib.*{}'.format(skbu.get_lib_ext()),
    #         '*{}*'.format(skbu.get_lib_ext()),
    #         'lib.*{}*'.format(skbu.get_lib_ext()),
    #     ] + ([
    #         'Release\\*.dll',
    #         'lib/Release\\*.dll'
    #     ] if os.name == 'nt' else []),
    # },
    # package_data={'pyflann.lib': ['libflann.so', 'flann.dll', 'libflann.dll', 'libflann.dylib']},
    # -------------------

    # List of classifiers available at:
    # https://pypi.python.org/pypi?%3Aaction=list_classifiers
    classifiers=[
        'Development Status :: 6 - Mature',
        'License :: OSI Approved :: BSD License',
        'Intended Audience :: Developers',
        'Intended Audience :: Science/Research',
        'Operating System :: MacOS :: MacOS X',
        'Operating System :: Unix',
        'Topic :: Software Development :: Libraries :: Python Modules',
        'Programming Language :: Python :: 2.7',
        'Programming Language :: Python :: 3.5',
        'Programming Language :: Python :: 3.6',
        'Programming Language :: Python :: 3.7',
        'Programming Language :: Python :: 3.8',
        'Topic :: Scientific/Engineering :: Artificial Intelligence',
        'Topic :: Scientific/Engineering :: Image Recognition'
    ],
    cmake_args=[
        '-DBUILD_MATLAB_BINDINGS=OFF',
        '-DBUILD_DOC=OFF',
    ],
    ext_modules=skbu.EmptyListWithLength(),  # hack for including ctypes bins
)

if __name__ == '__main__':
    skb.setup(**KWARGS)
    """
    python -c "import pyflann; print(pyflann.__file__)"
    """
